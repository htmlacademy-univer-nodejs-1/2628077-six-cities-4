openapi: '3.0.2'
info:
  title: API сервер для демо-проекта «Шесть городов».
  description: |-
    * Список ресурсов и маршрутов сервера «Шесть городов».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0
tags:
  - name: users
    description: Действия с пользователем.
  - name: offers
    description: Действия с предложениями.
  - name: comments
    description: Действия с комментариями.
  - name: premium
    description: Действия с премиальными предложениями.
  - name: favorites
    description: Действия с избранными предложениями.


paths:
  /offers:
    post:
      tags:
        - offers
      summary: Создание нового предложения.
      description: Возвращает информацию по созданию нового предложения.

      requestBody:
        description: Информация для создания нового предложения.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newOffer'
        required: true

      responses:
        "201":
          description: Предложение создано.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offer'
        "409":
          description: Некорректный запрос.

    get:
      tags:
        - offers
      summary: Получение списка предложений по аренде.
      description: Возвращает информацию о списке предложении по аренде.

      responses:
       "201":
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/offer'
       "409":
        description: Некорректный запрос.

  /offers/{offerId}:
    get:
      tags:
        - offers
      summary: Получение детальной информации о предложении.
      description: Возвращает детальную информацию о предложении.

      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: string

      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        "409":
          description: Некорректный запрос.

    patch:
      tags:
        - offers
      summary: Редактирование предложения.
      description: Возвращает информацию о редактировании предложения.

      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: string

      requestBody:
        description: Обновленное предложение.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offer'
        required: true

      responses:
        "201":
          description: Предложение обновлено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        "409":
          description: Некорректный запрос.

    delete:
      tags:
        - offers
      summary: УУдаление предложения.
      description: Возвращяет информацию об удалении предложения.

      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: string

      responses:
        "201":
          description: Предложение успешно удалено.
        "409":
          description: Некорректный запрос.

  /offers/{offerId}/comments:
    get:
      tags:
        - comments
      summary: Получение списка комментариев для предложения.
      description: Возвращает информацию о состоянии списка комментариев для предложения.

      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: string

      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/сomment'
        "409":
          description: Некорректный запрос

    post:
      tags:
        - comments
      summary: Добавление комментария для предложения.
      description: Возвращает информацию о добавлении нового комментария.

      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: string

      requestBody:
        description: Новый комментарий.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/сommentAdd'
        required: true

      responses:
        "201":
          description: Комментарий добавлен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/сomment'
        "409":
          description: Некорректный запрос.

  /users/register:
      post:
        tags:
          - users
        summary: Создание нового пользователя.
        description: Регистрирует нового пользователя.

        requestBody:
          description: Информация для создания нового пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createUser'
          required: true

        responses:
          "201":
            description: Пользователь зарегистрирован. Объект пользователя.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/user'
          "409":
            description: Некорректный запрос.

  /users/login:
    post:
      tags:
        - users
      summary: Вход в закрытую часть приложения.
      description: Авторизует пользователя на основе логина и пароля.

      requestBody:
        description: Информация для авторизация пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userAuthorization'
        required: true

      responses:
        "201":
          description: Пользователь авторизировался.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userAuthorizationResponse'
        "409":
          description: Некорректный запрос.

    get:
      tags:
        - users
      summary: Проверка состояния пользователя.
      description: Возвращает информацию по авторизованному пользователю.

      responses:
        "201":
          description: ОК
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        "409":
          description: Некорректный запрос.

  /users/logout:
    delete:
      tags:
        - users
      summary: Выход из закрытой части приложения.
      description: Возвращает информацию по выходу пользователя.

      responses:
        "201":
          description: Пользователь вышел из системы.
        "409":
          description: Некорректный запрос.

  /offers/premium?city={city}:
    get:
      tags:
        - premium
      summary: Получение списка премиальных предложений для города.
      description: Возвращает список премиальных предложений для города.

      parameters:
        - name: city
          in: query
          required: true
          schema:
            type: string
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offer'
        "409":
          description: Некорректный запрос.

  /offers/favorites:
    get:
      tags:
        - favorites
      summary: Получения списка предложений, добавленных в избранное.
      description: Возвращает список предложений, добавленных в избранное.

      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offer'
        "409":
          description: Некорректный запрос

  /offers/favorites/{offerId}:
    post:
      tags:
        - favorites
      summary: Добавление предложения в избранное.
      description: Добавляет предложение в избранное.

      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Предложение добавлено в избранное.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        "409":
          description: Некорректный запрос.

    delete:
      tags:
        - offers
      summary: Удаление предложения из избранного.
      description: Удаляет предложения из избранного.

      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Предложение удалено из избранного.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        "409":
          description: Некорректный запрос.

components:
  schemas:
    offer:
      description: offer schema
      properties:
        id:
          type: string
        price:
          type: number
        rating:
          type: number
        title:
          type: string
          minLength: 10
          maxLength: 100
        isPremium:
          type: boolean
        isFavorite:
          type: boolean
        city:
          $ref: '#/components/schemas/city'
        location:
          $ref: '#/components/schemas/location'
        previewImage:
          type: string
        type:
          $ref: '#/components/schemas/offerType'
        bedrooms:
          type: number
        description:
          type: string
          minLength: 20
          maxLength: 1024
        goods:
          type: array
          items:
            type: string
        host:
          $ref: '#/components/schemas/user'
        images:
          type: array
          items:
            type: string
        maxAdults:
          type: number

    newOffer:
      description: newOffer schema
      properties:
        title:
          type: string
          minLength: 10
          maxLength: 100
        description:
          type: string
          minLength: 20
          maxLength: 1024
        city:
          $ref: '#/components/schemas/city'
        previewImage:
          type: string
        isPremium:
          type: boolean
        type:
          $ref: '#/components/schemas/offerType'
        bedrooms:
          type: number
        maxAdults:
          type: number
        price:
          type: number
        goods:
          type: array
          items:
            type: string
        location:
          $ref: '#/components/schemas/location'
        images:
          type: array
          items:
            type: string

    сomment:
      description: comment schema
      properties:
        id:
          type: string
        comment:
          type: string
          minLength: 5
          maxLength: 1024
        date:
          type: string
        rating:
          type: number
        user:
          $ref: '#/components/schemas/user'

    сommentAdd:
      description: сommentAdd scheme
      properties:
        comment:
          type: string
        rating:
          type: number

    user:
      description: user schema
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 15
          example: Dmitry
        avatarUrl:
          type: string
        type:
          $ref: '#/components/schemas/userType'
        email:
          type: string
          pattern: ^\S@i.edu$

    createUser:
      description: createUser schema
      properties:
        name:
          type: string
        password:
          type: string
          minLength: 6
          maxLength: 12
        type:
          $ref: '#/components/schemas/userType'
        email:
          type: string
          pattern: ^\S@i.edu$

    userAuthorization:
      description: userAuthorization schema
      properties:
        email:
          type: string
          pattern: ^\S@i.edu$
        password:
          type: string
          minLength: 6
          maxLength: 12

    userAuthorizationResponse:
      description: user schema
      properties:
        name:
          type: string
        avatarUrl:
          type: string
        type:
          $ref: '#/components/schemas/userType'
        email:
          type: string
          pattern: ^\S@i.edu$
        token:
          type: string

    city:
      description: city schema
      properties:
        name:
          $ref: '#/components/schemas/cityName'
        location:
          $ref: '#/components/schemas/location'

    location:
      description: location schema
      properties:
        latitude:
          type: number
        longitude:
          type: number

    offerType:
      description: offerType schema
      type: string
      enum:
        - apartment
        - room
        - house
        - hotel

    userType:
      description: userType schema
      type: string
      enum:
        - pro
        - regular

    cityName:
      description: cityName schema
      type: string
      enum:
        - Paris
        - Cologne
        - Brussels
        - Amsterdam
        - Hamburg
        - Dusseldorf
